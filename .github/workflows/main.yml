name: Test Workflow CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
            path: ~/.m2/repository
            key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            restore-keys: |
                  ${{ runner.os }}-maven-
              

#      - name: Build with Maven
#        run: mvn clean install -B

      # táº£i vÃ  giáº£i nÃ©n chrome
      - name: Download and extract chrome
        working-directory: ./src/test/resources
        run: |
          wget https://storage.googleapis.com/chrome-for-testing-public/141.0.7390.78/linux64/chrome-linux64.zip
          unzip chrome-linux64.zip
          chmod +x chrome-linux64/chrome
          ls -l chrome-linux64/chrome
          ls 

      # táº£i vÃ  giáº£i nÃ©n chromedriver
      - name: Download and extract chromedriver
        working-directory: ./src/test/resources
        run: |
          wget https://storage.googleapis.com/chrome-for-testing-public/141.0.7390.78/linux64/chromedriver-linux64.zip
          unzip chromedriver-linux64.zip
          mv chromedriver-linux64/chromedriver .
          rm -rf chromedriver.zip chromedriver-linux64.zip chrome-linux64.zip chromedriver-linux64
          ls -l chromedriver
          ls 

#      - name: Runtest chrome
#        run: |
#          mvn test -P chrome

      - name: Download and extract Firefox
        working-directory: ./src/test/resources
        run: |
         touch created
         wget -O firefox.tar.xz "https://download.mozilla.org/?product=firefox-latest&os=linux64&lang=en-US"
         tar -xJf firefox.tar.xz
         chmod +x firefox/firefox
         ls -l firefox/firefox
         ls -al

      - name: Download gecko
        working-directory: ./src/test/resources
        run: |
          wget -O geckodriver.tar.gz "https://github.com/mozilla/geckodriver/releases/download/v0.36.0/geckodriver-v0.36.0-linux64.tar.gz"
          tar -xzf geckodriver.tar.gz
          chmod +x geckodriver
          ls -l geckodriver
          ls

      - name: Run tests in parallel
        run: |
          mvn test -Pchrome > chrome.log 2>&1 &
          mvn test -Pfirefox > firefox.log 2>&1 &
          wait

      - name: Extract Cucumber Report URLs
        id: extract_report
        run: |
          CHROME_URL=$(grep -o 'https://reports.cucumber.io/reports/[a-zA-Z0-9\-]*' chrome.log)
          FIREFOX_URL=$(grep -o 'https://reports.cucumber.io/reports/[a-zA-Z0-9\-]*' firefox.log)
          echo "chrome_url=$CHROME_URL" >> $GITHUB_OUTPUT
          echo "firefox_url=$FIREFOX_URL" >> $GITHUB_OUTPUT

      - name: Cucumber Report URLs <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        run: |
          echo "ðŸ”— Chrome report: ${{ steps.extract_report.outputs.chrome_url }}"
          echo "ðŸ”— Firefox report: ${{ steps.extract_report.outputs.firefox_url }}"